# ============================================================================
# Nav2 Parameters for Odom-Only Navigation (No Map, No Obstacles)
# Robot: Shelfbot 4-wheel skid-steer
# ============================================================================

# ============================================================================
# BT NAVIGATOR - Behavior Tree orchestration
# ============================================================================
bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: odom                    # CRITICAL: Use odom, not map
    robot_base_frame: base_footprint      # Must match URDF base frame
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    transform_tolerance: 0.5
    
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_round_robin_node_bt_node

# ============================================================================
# CONTROLLER SERVER - Path following
# ============================================================================
controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 10.0            # Increased from 2.0 for better response
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    odom_topic: /odom
    
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    # Progress checker - detect if robot is stuck
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.3       # Relaxed from 0.2
      movement_time_allowance: 30.0       # More time in dynamic environment

    # Goal checker - when to consider goal reached
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.3              # 30cm tolerance (dynamic env)
      yaw_goal_tolerance: 0.5             # ~30 degrees
      stateful: True

    # Pure Pursuit controller - good for dynamic environments
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.2             # Slow for dynamic environment
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 1.0
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 0.3
      transform_tolerance: 0.5
      use_velocity_scaled_lookahead_dist: true
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: false      # No sensors for collision detection
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: true
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.5
      regulated_linear_scaling_min_speed: 0.1
      use_rotate_to_heading: true
      rotate_to_heading_min_angle: 0.3
      max_angular_accel: 2.0
      max_robot_pose_search_dist: 5.0
      use_interpolation: true
      allow_reversing: false              # Safer in dynamic environment

# ============================================================================
# PLANNER SERVER - Global path planning
# ============================================================================
planner_server:
  ros__parameters:
    use_sim_time: False
    expected_planner_frequency: 1.0       # Replan every second
    planner_plugins: ["GridBased"]
    
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5                      # Generous tolerance
      use_astar: false                    # Dijkstra is fine for simple paths
      allow_unknown: true                 # No map, everything is "unknown"

# ============================================================================
# BEHAVIOR SERVER - Recovery behaviors
# ============================================================================
behavior_server:
  ros__parameters:
    use_sim_time: False
    global_frame: odom
    robot_base_frame: base_footprint
    transform_tolerance: 0.5
    
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait"]
    
    spin:
      plugin: "nav2_behaviors/Spin"
      spin_dist: 1.57
      simulate_ahead_time: 2.0
      max_rotational_vel: 0.5
      min_rotational_vel: 0.1
      rotational_acc_lim: 2.0
    
    backup:
      plugin: "nav2_behaviors/BackUp"
      backup_dist: -0.3
      backup_speed: -0.1
      simulate_ahead_time: 2.0
      max_rotational_vel: 0.5
      min_rotational_vel: 0.1
      rotational_acc_lim: 2.0
    
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
      target_dist: 0.5
      speed: 0.2
      time_allowance: 10.0
      forward: true
      simulate_ahead_time: 2.0
      max_rotational_vel: 0.5
      min_rotational_vel: 0.1
      rotational_acc_lim: 2.0
    
    wait:
      plugin: "nav2_behaviors/Wait"
      wait_duration: 5.0


# ============================================================================
# WAYPOINT FOLLOWER - Multi-waypoint navigation
# ============================================================================
waypoint_follower:
  ros__parameters:
    use_sim_time: False
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 0

# ============================================================================
# VELOCITY SMOOTHER - Smooth cmd_vel commands
# ============================================================================
velocity_smoother:
  ros__parameters:
    use_sim_time: False
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    
    # Match your robot's capabilities
    max_velocity: [0.3, 0.0, 0.8]         # [vx, vy, w] - no vy for skid-steer
    min_velocity: [-0.15, 0.0, -0.8]      # Allow slow reverse
    
    max_accel: [1.0, 0.0, 2.0]
    max_decel: [-1.0, 0.0, -2.0]
    
    odom_topic: /odom
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

# ============================================================================
# LOCAL COSTMAP - Small rolling window around robot
# ============================================================================
local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: False
      global_frame: odom                  # CRITICAL: odom frame
      robot_base_frame: base_footprint
      
      update_frequency: 5.0
      publish_frequency: 2.0
      
      # Rolling window configuration
      rolling_window: true
      width: 8                            # 8m x 8m window
      height: 8
      resolution: 0.05                    # 5cm cells
      
      # Robot footprint
      robot_radius: 0.35                  # Adjust to your robot size
      
      transform_tolerance: 0.5
      
      # MINIMAL PLUGINS - No obstacle detection
      plugins: ["inflation_layer"]
      
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: True
        inflation_radius: 0.45            # Safety bubble around robot
        cost_scaling_factor: 3.0
      
      always_send_full_costmap: True

# ============================================================================
# GLOBAL COSTMAP - Larger rolling window for planning
# ============================================================================
global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: False
      global_frame: odom                  # CRITICAL: odom frame
      robot_base_frame: base_footprint
      
      update_frequency: 1.0
      publish_frequency: 1.0
      
      # Larger rolling window for global planning
      rolling_window: true
      width: 20                           # 20m x 20m window
      height: 20
      resolution: 0.1                     # 10cm cells (coarser)
      
      robot_radius: 0.35
      
      transform_tolerance: 0.5
      track_unknown_space: false          # No map, ignore unknown
      
      # MINIMAL PLUGINS - No obstacles
      plugins: ["inflation_layer"]
      
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: True
        inflation_radius: 0.45
        cost_scaling_factor: 3.0
      
      always_send_full_costmap: True

# ============================================================================
# COLLISION MONITOR (Optional - if you add bump sensors later)
# ============================================================================
# collision_monitor:
#   ros__parameters:
#     use_sim_time: False
#     base_frame_id: "base_footprint"
#     odom_frame_id: "odom"
#     cmd_vel_in_topic: "cmd_vel_nav"
#     cmd_vel_out_topic: "cmd_vel"
#     state_topic: "collision_monitor_state"
#     transform_tolerance: 0.5
#     source_timeout: 5.0
#     stop_pub_timeout: 2.0
#
